FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Pingeon

Notification Microservice.

## Send a pub/sub message to a channel [/provider/pubsub/channel]
### /provider/pubsub/channel [POST]

+ Request (application/json)

        {
            "channel": "stream",
            "message": {"text": "Hello!"}
        }

+ Response 201

        {
            "channel": "stream",
            "message": {"text": "Hello!"},
            "statusCode": 200
        }
        
## Send a pub/sub message to a recipient [/provider/pubsub/recipient]
### /provider/pubsub/recipient [POST]

+ Request (application/json)

        {
            "recipientId": "1",
            "message": {"text": "Hello!"}
        }

+ Response 201

        [{
            "channel": "stream",
            "message": {"text": "Hello!"},
            "statusCode": 200
        }]

## Send a message to an email address [/provider/email/address]
### /provider/email/address [POST]

+ Request (application/json)

    {
         "address": "example@gmail.com",
         "template": "thanks-for-register",
         "vars": {
             "name": "Kostyan"
         }
    }

+ Response 201

    [{
        "email":"example@gmail.com",
        "status":"sent",
        "_id":"13lf45gw5","reject_reason":null
    }]

## Send a message to an email address [/provider/email/recipient]
### /provider/email/recipient [POST]

+ Request (application/json)

    {
         "recipientId": "1",
         "template": "thanks-for-register",
         "vars": {
             "name": "Kostyan"
         }
    }

+ Response 201

    [{
        "email":"example@gmail.com",
        "status":"sent",
        "_id":"13lf45gw5","reject_reason":null
    }]

## Send a push notification to a recipient [/provider/push/recipient]
### /provider/push/recipient [POST]

+ Request (application/json)

        {
            "recipientId": "1",
            "message": "Hello",
            "payload": {}
        }

+ Response 201

        [{
            "message": "Hello",
            "providerMessageId": "2",
            "payload": {},
            "sendDate": "2016-05-20T17:19:15.602Z",
            "platformApplicationArn":"arn:aws:sns:us-east-1:1:app/APNS_SANDBOX/1"
        }]

## Send a push notification to specific device [/provider/push/token]
### /provider/push/token [POST]

+ Request (application/json)

        {
            "token": "1",
            "message": "Hello",
            "payload": {}
        }

+ Response 201

        {
            "message": "Hello",
            "providerMessageId": "2",
            "payload": {},
            "sendDate": "2016-05-20T17:19:15.602Z",
            "platformApplicationArn":"arn:aws:sns:us-east-1:1:app/APNS_SANDBOX/1"
        }

## Send a batch of notifications [/notification/batch]
### /notification/batch [POST]

+ Request (application/json)

        {
          "recipients": ["1", "2"],
          "providers": {
            "email": {
              "template": "new-comment-on-inspection",
              "vars": { "inspectionId": 1234567 },
              "addresses": ["s@tep.io", "p@tep.io"]
            },
            "push": {
              "message": "New comment on inspection #1234567",
              "payload": {
                "link": "inspection://inspection/123567/#comment-1234567"
              },
              "tokens": ["1", "2"]
            },
            "pubsub": {
              "message": "New comment on inspection #1234567",
              "channels": ["some"]
            }
          }
        }

+ Response 201

        {
            "status": "queued"
        }
